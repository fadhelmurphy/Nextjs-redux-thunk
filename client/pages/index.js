import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from 'styles/Home.module.css'
import { loadHistory } from 'store/actions/historyListAction'
import { useEffect, useMemo, useState } from 'react'
import { useDispatch, useSelector } from 'react-redux';
import moment from 'moment';
import { IdrConvert } from '@helpers/utils'
import Card from '@components/card';
import Modal from '@components/modal'

const inter = Inter({ subsets: ['latin'] })


export default function Home() {

  const getHistory = useSelector((state) => useMemo(() => state.storeHistory, [state.storeHistory]));
  const getTotalPengeluaran = useMemo(() => getHistory.status === "fetch_result" ? getHistory.data.data.reduce((curr, next) => curr + next.pengeluaraan, 0) : 0, [getHistory.status])
  const getHistoryData = useMemo(() => getHistory.status === "fetch_result" ? 
  getHistory.data.data.reduce((currObject, nextObject) => {

    const { tanggal } = nextObject;
    const key = tanggal;
    currObject[key] = (currObject[key] || []).concat(nextObject);
    return currObject;
  }, {}) : [], 
  [getHistory.status]);
  const [modal, setModal] = useState(false)
  const [form, setForm] = useState({})
  const handleForm = ({target}) => {
    setForm((prev) => ({...prev, [target.name]: target.value}))
  }
  const dispatch = useDispatch();
  const handleFormSubmit = () => {
    const lastHistory = Object.values(getHistoryData)[0];
    const lastHistoryFullDate = Object.keys(getHistoryData)[0];
    const lastHistoryDate = lastHistoryFullDate?.split(" ")[0];
    const lastHistoryMonthYear = lastHistoryFullDate.substring(2);

    const currentHour = moment().format("hh:mm");
    if(lastHistory.length <= 5 ){

      lastHistory?.push(
        {jam: currentHour, 
          tanggal: lastHistoryFullDate, 
          nama: form.nama, 
          pengeluaraan: parseInt(form?.pengeluaraan || 0)
        })
    } else {
      const newRecord = `${parseInt(lastHistoryDate)+1} ${lastHistoryMonthYear}`;
      getHistoryData[newRecord] = [
        {jam: currentHour, 
          tanggal: newRecord, 
          nama: form.nama, 
          pengeluaraan: parseInt(form?.pengeluaraan || 0)
        }]
    }
    setModal(false);
  }

  useEffect(() => {
    dispatch(loadHistory());
  }, [])

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="container">
        <div className='head'>
          <h1 className='text-3xl'>Diari Jajan Februari 2021</h1>
          <p className='text-2xl'>Pengeluaran Bulan ini {IdrConvert(getTotalPengeluaran)}</p>
          <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded" onClick={() =>{
            setModal(true)
          }}>
  Tambah Item
</button>
        </div>
        <div className='content'>
{Object.entries(getHistoryData).length > 0 && Object.entries(getHistoryData).map((item) => {
  return (
    <Card title={item[0]} list={item[1]} />
  )
})}
        </div>
      </div>
      <Modal show={modal} title="Tambah Entry" contentBackground="#fff" onHide={() => setModal(false)}>
      <form class="bg-white shadow-md rounded px-8 py-4">
    <div class="mb-4">
      <label class="block text-gray-700 text-sm font-bold mb-2" for="username">
        Nama
      </label>
      <input name="nama" onChange={handleForm} class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" id="username" type="text" placeholder="Masukan nama"/>
    </div>
    <div class="mb-6">
      <label class="block text-gray-700 text-sm font-bold mb-2" for="password">
        Harga
      </label>
      <input name="pengeluaraan" onChange={handleForm} class="shadow appearance-none border border-red-500 rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline" id="password" type="number" />
      <p class="text-red-500 text-xs italic">Please choose a password.</p>
    </div>
    <div class="flex items-center justify-between">
      <a class="inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800" onClick={() => setModal(false)}>
        BATAL
      </a>
      <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" type="button" onClick={handleFormSubmit}>
        KIRIM
      </button>
    </div>
  </form>
        </Modal>
        <style>
          {`
          
        input {
          background: #fff;
        }
          `}
          </style>
      <style jsx>
        {`
        .container {
          margin: 0 auto;
        }
        .container .head {
          text-align: center;
          margin: 25px 0;
        }
        .container .content {
          display: grid;
          grid-template-columns: repeat(4,1fr);
          grid-gap: 25px;
        }
        `}
      </style>
    </>
  )
}
